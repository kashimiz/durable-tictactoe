{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"],
            "metadata": {
                "description": "Storage Account type for the Azure Functions data."
            }
        },
		"functionName": {
			"type": "string",
			"metadata": {
				"description": "The name of the Azure Function app to create"
			}
		},
		"functionAppSKU": {
			"type": "string",
			"allowedValues": [
				"Free",
				"Basic",
				"Standard"
			],
			"defaultValue": "Standard",
			"metadata": {
				"description": "The pricing tier for the Function App hosting plan."
			}
		},
		"functionAppSKUCode": {
			"type": "string",
			"allowedValues": [
				"F1",
				"B1",
				"S1"
			],
			"defaultValue": "S1",
			"metadata": {
				"description": "The pricing tier for the Function App hosting plan."
			}
		},
		"functionAppWorkerSize": {
			"type": "string",
			"allowedValues": [
				"0",
				"1",
				"2"
			],
			"defaultValue": "0",
			"metadata": {
				"description": "The instance size of the hosting plan (small, medium, or large)"
			}
		},
		"signalrName": {
		  "type": "string",
		  "metadata": {
			"description": "The globally unique name of the SignalR resource to create."
		  }
		},
		"signalrPricingTier": {
		  "type": "string",
		  "defaultValue": "Standard_S1",
		  "allowedValues": [
			"Free_F1",
			"Standard_S1"
		  ],
		  "metadata": {
			"description": "The pricing tier of the SignalR resource."
		  }
		},
		"signalrCapacity": {
		  "type": "int",
		  "defaultValue": 1,
		  "allowedValues": [
			1,
			2,
			5,
			10,
			20,
			50,
			100
		  ],
		  "metadata": {
			"description": "The number of SignalR Unit."
		  }
		},
		"mysqlServerName": {
            "type": "string",
            "metadata": {
                "description": "Server name for Azure Database for MySQL"
            }
        },
        "mysqlAdministratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Database administrator login name"
            }
        },
        "mysqlAdministratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Database administrator password. It must contain from 8 to 128 characters. It also must contain characters from three of the following categories: English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, and so on)"
            }
        },
        "mysqlSkuCapacity": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Azure Database for MySQL compute capacity in vCores (2,4,8,16,32)"
            }
        },
        "mysqlSkuName": {
            "type": "string",
            "defaultValue": "GP_Gen5_2",
            "metadata": {
                "description": "Azure Database for MySQL sku name "
            }
        },
        "mysqlSkuSizeMB": {
            "type": "int",
            "defaultValue": 5120,
            "metadata": {
                "description": "Azure Database for MySQL Sku Size "
            }
        },
        "mysqlSkuTier": {
            "type": "string",
            "defaultValue": "GeneralPurpose",
            "metadata": {
                "description": "Azure Database for MySQL pricing tier"
            }
        },
        "mysqlSkuFamily": {
            "type": "string",
            "defaultValue": "Gen5",
            "metadata": {
                "description": "Azure Database for MySQL sku family"
            }
        },
        "mysqlVersion": {
            "type": "string",
            "allowedValues": [
                "5.6",
                "5.7"
            ],
            "defaultValue": "5.7",
            "metadata": {
                "description": "MySQL version"
            }
        },
        "mysqlBackupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "MySQL Server backup retention days"
            }
        },
        "mysqlGeoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Geo-Redundant Backup setting"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "azure_mysql_vnet",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "azure_mysql_subnet",
            "metadata": {
                "description": "Subnet Name"
            }
        },
        "virtualNetworkRuleName": {
            "type": "string",
            "defaultValue": "AllowSubnet",
            "metadata": {
                "description": "Virtual Network RuleName"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual Network Address Prefix"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Subnet Address Prefix"
            }
        }
    },
    "variables": {
	    "functionAppName": "[parameters('functionName')]",
		"hostingPlanName": "[parameters('functionName')]",
		"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'asyncmp')]",
		"storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "mysqlFirewallRules": {
            "batch": {
                "rules": [
                    {
                        "Name": "rule1",
                        "StartIpAddress": "0.0.0.0",
                        "EndIpAddress": "255.255.255.255"
                    },
                    {
                        "Name": "rule2",
                        "StartIpAddress": "0.0.0.0",
                        "EndIpAddress": "255.255.255.255"
                    }
                ]
            }
        }
	},
    "resources": [
		{
			"apiVersion": "2017-05-10",
			"name": "pid-",
			"comments": "GUID for tracking production pilot deployments intended for Gaming-Serverless-Async-Multiplayer.",
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"template": {
						"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
							"contentVersion": "1.0.0.0",
							"resources": []
					}
				}
		},
		{
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-12-01",
            "location": "[parameters('location')]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2016-09-01",
			"name": "[variables('hostingPlanName')]",
			"location": "[parameters('location')]",
			"properties": {
				"name": "[variables('hostingPlanName')]",
				"workerSizeId": "[parameters('functionAppWorkerSize')]",
				"hostingEnvironment": "",
				"numberOfWorkers": 1
			},
			"sku": {
				"Tier": "[parameters('functionAppSKU')]",
				"Name": "[parameters('functionAppSKUCode')]"
			}			
		},
		{
		  "apiVersion": "2018-03-01-preview",
		  "location": "[parameters('location')]",
		  "name": "[parameters('signalrName')]",
		  "properties": {
			"hostNamePrefix": "[parameters('signalrName')]"
		  },
		  "sku": {
			"capacity": "[parameters('signalrCapacity')]",
			"name": "[parameters('signalrPricingTier')]"
		  },
		  "type": "Microsoft.SignalRService/SignalR"
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('functionAppName')]",
			"location": "[parameters('location')]",
			"kind": "functionapp",
			"properties": {
				"name": "[variables('functionAppName')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"hostingEnvironment": "",
				"clientAffinityEnabled": false,
				"siteConfig": {
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
			],
			"resources": [
				{
					"apiVersion": "2016-08-01",
					"name": "appsettings",
					"type": "config",
					"dependsOn": [
						"[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
						"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
					],
					"properties": {
						"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
						"AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
						"FUNCTIONS_EXTENSION_VERSION": "~2"
					}
				}
			]
		},
		{
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2018-06-01",
                    "type": "subnets",
                    "location": "[parameters('location')]",
                    "name": "[parameters('subnetName')]",
                    "dependsOn": [
                        "[parameters('virtualNetworkName')]"
                    ],
                    "properties": {
                        "addressPrefix": "[parameters('subnetPrefix')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.DBforMySQL/servers",
            "location": "[parameters('location')]",
            "name": "[parameters('mysqlServerName')]",
            "sku": {
                "name": "[parameters('mysqlSkuName')]",
                "tier": "[parameters('mysqlSkuTier')]",
                "capacity": "[parameters('mysqlSkuCapacity')]",
                "size": "[parameters('mysqlSkuSizeMB')]",
                "family": "[parameters('mysqlSkuFamily')]"
            },
            "properties": {
                "version": "[parameters('mysqlVersion')]",
                "administratorLogin": "[parameters('mysqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('mysqlAdministratorLoginPassword')]",
                "storageProfile": {
                    "storageMB": "[parameters('mysqlSkuSizeMB')]",
                    "backupRetentionDays": "[parameters('mysqlBackupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('mysqlGeoRedundantBackup')]"
                }
            },
            "resources": [
                {
                    "name": "[parameters('virtualNetworkRuleName')]",
                    "type": "virtualNetworkRules",
                    "apiVersion": "2017-12-01",
                    "properties": {
                        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
                        "ignoreMissingVnetServiceEndpoint": true
                    },
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/servers/', parameters('mysqlServerName'))]"
                    ]
                }
            ]
        },
		{
            "name": "[concat(parameters('mysqlServerName'),'/',variables('mysqlFirewallRules').batch.rules[copyIndex()].Name)]",
            "type": "Microsoft.DBforMySQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.DBforMySQL/servers/', parameters('mysqlServerName'))]"
            ],
            "copy": {
                "name": "firewallRulesCopy",
                "mode": "Serial",
                "batchSize": 1,
                "count": "[length(variables('mysqlFirewallRules').batch.rules)]"
            },
            "properties": {
                "StartIpAddress": "[variables('mysqlFirewallRules').batch.rules[copyIndex()].StartIpAddress]",
                "EndIpAddress": "[variables('mysqlFirewallRules').batch.rules[copyIndex()].EndIpAddress]"
            }
        }
    ]
}